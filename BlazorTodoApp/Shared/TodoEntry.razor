@using Microsoft.AspNetCore.Components.Forms
@using BlazorTodoApp.Data

<div class="card">
  <div class="card-header ">
    <div class="row ">
      <div class="col-8 ">
        @if (EditMode)
        {
          <InputText type="text" class="form-control" placeholder="Title" @bind-Value="@Title"/>
        }
        else
        {
          <h5 class="mb-0">
            <button class="btn btn-link" @onclick="OnEntryClicked">
              @Title
            </button>
          </h5>
        }
      </div>
      @if(!CreateMode)
      {
        <div class="col-1">
          <button class="btn btn-link" @onclick="OnEditClicked">
            <span class="oi oi-pencil" aria-hidden="true"></span>
          </button>
        </div>
      }
      @if (EditMode)
      {
        // Show the save button
        <div class="col-1">
          <button class="btn btn-link" @onclick="async () => await OnSaveClicked.InvokeAsync(new EntryDataDto(Title, Content))">
            <span class="oi oi-collapse-down" aria-hidden="true"></span>
          </button>
        </div>
      }
      else
      {
        <div class="col-1">
          <button class="btn btn-link">
            <span class="oi oi-x" aria-hidden="true"></span>
          </button>
        </div>
        <div class="col-1">
          <button class="btn btn-link">
            <span class="oi oi-eye" @onclick="OnEntryClicked"></span>
          </button>
        </div>
      }


    </div>
  </div>
  <div id="collapseOne" class="collapse @(Collapsed ? "" : "show") " aria-labelledby="headingOne" data-parent="#accordion">
    <div class="card-body">
      @if (EditMode)
      {
        <InputTextArea class="form-control" id="exampleFormControlTextarea1" rows="3" @bind-Value="@Content"/>
      }
      else
      {
        @Content
      }
    </div>
  </div>
</div>

@code
{
  [Parameter]
  public string Title { get; set; }

  [Parameter]
  public string Content { get; set; }

  [Parameter]
  public bool EditMode { get; set; }

  [Parameter]
  public bool CreateMode { get; set; }

  [Parameter]
  public EventCallback OnEditClicked { get; set; }

  [Parameter]
  public bool Collapsed { get; set; }

  [Parameter]
  public EventCallback OnEntryClicked { get; set; }

  [Parameter]
  public EventCallback<EntryDataDto> OnSaveClicked { get; set; }

}