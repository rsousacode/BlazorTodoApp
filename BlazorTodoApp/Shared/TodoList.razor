@using BlazorTodoApp.Data
@inject TodoListService ListService

<div class="navbar-nav align-items-center m-3">
  <div class="col">
    <button type="button"
            class=" btn btn-primary px-sm-4 m-1 align-content-center">
      Add item
    </button>
  </div>
</div>
<div id="accordion">
  @foreach (var todoEntry in RenderData.Values)
  {
    <TodoEntry
      Title=@todoEntry.Data.Title
      Content=@todoEntry.Data.Content
      Collapsed=@todoEntry.IsCollapsed
      OnEntryClicked="async () => await OnEntryClicked(todoEntry)"
      EditMode=@todoEntry.IsEditMode
      OnEditClicked="async () => await OnEntryEditClicked(todoEntry)"
      OnSaveClicked="async (entryEditData) => await OnEntrySaveClicked(todoEntry.Data.Id, entryEditData)"
    />
  }
</div>

@code
{
  Dictionary<int, EntryRenderData> RenderData { get; set; } = new();

  protected override void OnInitialized()
  {
  // Initialize our rendering data
    foreach (var entryData in ListService.GetEntries())
    {
      RenderData.Add(entryData.Id, new EntryRenderData(entryData));
    }
  }
  async Task OnEntryClicked(EntryRenderData entryData)
  {
    var collapsed = RenderData[entryData.Data.Id].IsCollapsed;
    RenderData[entryData.Data.Id].IsCollapsed = !collapsed;
  }
  
  async Task OnEntryEditClicked(EntryRenderData entryData)
  {
  // Toggle editMode
    var editMode = RenderData[entryData.Data.Id].IsEditMode;
    RenderData[entryData.Data.Id].IsEditMode = !editMode;
        
    // Toggle collapse state
    RenderData[entryData.Data.Id].IsCollapsed = false;
  }
  
  async Task OnEntrySaveClicked(int id, EntryDataDto dataDto)
  {
  // Check if exists
    var item = ListService.GetEntryById(id);

    if (item != null)
    {
      // Update data in the "database"
      ListService.UpdateEntry(id, dataDto);
    }

    // Set edit mode to false
    RenderData[id].IsEditMode = false;


  }

}